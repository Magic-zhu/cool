{"version":3,"file":"Checkbox.stories.196343a1.js","sources":["../../../ui/src/components/MCheckBox/MCheckBox.vue","../../../ui/src/components/MCheckBox/MCheckBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"checkbox-wrapper\">\r\n    <div class=\"checkbox-show\">\r\n      <MIcon\r\n        v-show=\"ifChecked\"\r\n        color=\"green\"\r\n        width=\"17px\"\r\n        height=\"17px\"\r\n        :type=\"IconType.CHECKED\"\r\n      />\r\n    </div>\r\n    <input\r\n      type=\"checkbox\"\r\n      v-model=\"ifChecked\"\r\n      class=\"checkbox-real\"\r\n      @change=\"change\"\r\n    />\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from \"vue\"\r\nimport MIcon, { IconType } from \"../MIcon/MIcon.vue\"\r\nexport default defineComponent({\r\n  components: {\r\n    MIcon,\r\n  },\r\n  props: {\r\n    checked: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  setup(props, ctx) {\r\n    const ifChecked = ref(props.checked)\r\n    return {\r\n      ifChecked,\r\n      change() {\r\n        ctx.emit(\"onchange\", ifChecked.value)\r\n      },\r\n      IconType,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"less\" scoped>\r\n@import \"./MCheckBox.less\";\r\n</style>\r\n","<template>\r\n  <div class=\"checkbox-wrapper\">\r\n    <div class=\"checkbox-show\">\r\n      <MIcon\r\n        v-show=\"ifChecked\"\r\n        color=\"green\"\r\n        width=\"17px\"\r\n        height=\"17px\"\r\n        :type=\"IconType.CHECKED\"\r\n      />\r\n    </div>\r\n    <input\r\n      type=\"checkbox\"\r\n      v-model=\"ifChecked\"\r\n      class=\"checkbox-real\"\r\n      @change=\"change\"\r\n    />\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from \"vue\"\r\nimport MIcon, { IconType } from \"../MIcon/MIcon.vue\"\r\nexport default defineComponent({\r\n  components: {\r\n    MIcon,\r\n  },\r\n  props: {\r\n    checked: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  setup(props, ctx) {\r\n    const ifChecked = ref(props.checked)\r\n    return {\r\n      ifChecked,\r\n      change() {\r\n        ctx.emit(\"onchange\", ifChecked.value)\r\n      },\r\n      IconType,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"less\" scoped>\r\n@import \"./MCheckBox.less\";\r\n</style>\r\n"],"names":["_sfc_main","defineComponent","MIcon","props","ctx","ifChecked","ref","IconType","_component_MIcon","_resolveComponent","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_withDirectives","_createVNode","_ctx","_cache","$event","args"],"mappings":"sSAsBA,MAAAA,EAAeC,EAAgB,CAC7B,WAAY,CACV,MAAAC,CACF,EACA,MAAO,CACL,QAAS,CACP,KAAM,QACN,QAAS,EACX,CACF,EACA,MAAMC,EAAOC,EAAK,CACV,MAAAC,EAAYC,EAAIH,EAAM,OAAO,EAC5B,MAAA,CACL,UAAAE,EACA,QAAS,CACHD,EAAA,KAAK,WAAYC,EAAU,KAAK,CACtC,EACA,SAAAE,CAAA,CAEJ,CACF,CAAC,uFCzCC,MAAAC,EAAAC,EAgBM,OAhBN,aAEIC,EAME,MAAAC,EAAA,CAJaC,EAAA,MAAAC,EAAA,CACDC,EAAAC,EAAAP,EAAA,CACZ,MAAM,QACL,MAAM,OAAA,OAAA,OAJC,KAAAQ,EAAA,SAAA,OAAA,EAAA,KAAA,EAAA,CAAA,MAAA,CAAA,EAAA,kCAUV,KAAK,WACJ,sBAAMC,EAAE,KAAAA,EAAA,GAAAC,GAAAF,EAAA,UAAAE,GAAA,MAAA,gCAFAD,EAAS,GAAA,IAAAE,IAAAH,EAAA,QAAAA,EAAA,OAAA,GAAAG,CAAA,EAAA,EAAA,KAAA,GAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;"}
{"version":3,"file":"AttributeTransform.stories.c3f0ab67.js","sources":["../../../ui/src/components/AttributeTransform/AttributeTransform.vue","../../../ui/src/components/AttributeTransform/AttributeTransform.vue"],"sourcesContent":["<template>\n  <div class=\"attribute-transform\">\n    <Title\n      :label=\"label || 'TRANSFORM'\"\n      :ExpandStatus=\"ExpandStatus\"\n      @onClick=\"show\"\n    />\n    <div v-show=\"ExpandStatus\" class=\"\">\n      <div class=\"attribute\">\n        <div class=\"attribute-label\">Translation</div>\n        <div class=\"attribute-body\">\n          <div class=\"attribute-body-item\">\n            <span class=\"x\">X</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.location?.x\"\n              @onInput=\"\n                (v) => {\n                  out('location', 'x', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"y\">Y</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.location?.y\"\n              @onInput=\"\n                (v) => {\n                  out('location', 'y', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"z\">Z</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.location?.z\"\n              @onInput=\"\n                (v) => {\n                  out('location', 'z', v)\n                }\n              \"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"attribute\">\n        <div class=\"attribute-label\">Rotation</div>\n        <div class=\"attribute-body\">\n          <div class=\"attribute-body-item\">\n            <span class=\"x\">X</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.rotation?.x\"\n              @onInput=\"\n                (v) => {\n                  out('rotation', 'x', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"y\">Y</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.rotation?.y\"\n              @onInput=\"\n                (v) => {\n                  out('rotation', 'y', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"z\">Z</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.rotation?.z\"\n              @onInput=\"\n                (v) => {\n                  out('rotation', 'z', v)\n                }\n              \"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"attribute\">\n        <div class=\"attribute-label\">Scale</div>\n        <div class=\"attribute-body\">\n          <div class=\"attribute-body-item\">\n            <span class=\"x\">X</span\n            ><MInput width=\"60px\" :value=\"props.scale?.x\" />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"y\">Y</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.scale?.y\"\n              @onInput=\"\n                (v) => {\n                  out('scale', 'y', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"z\">Z</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.scale?.z\"\n              @onInput=\"\n                (v) => {\n                  out('scale', 'z', v)\n                }\n              \"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\"\nimport MInput from \"../MInput/MInput.vue\"\nimport Title from \"../AttributeTitle/AttributeTitle.vue\"\nexport default defineComponent({\n  props: {\n    location: {\n      type: Object,\n    },\n    rotation: {\n      type: Object,\n    },\n    scale: {\n      type: Object,\n    },\n    label: String,\n  },\n  components: {\n    MInput,\n    Title,\n  },\n  setup(props, ctx) {\n    const ExpandStatus = ref(true)\n    const show = () => {\n      ExpandStatus.value = !ExpandStatus.value\n    }\n    const data: any = {\n      location: {\n        x: props.location?.x || 0,\n        y: props.location?.y || 0,\n        z: props.location?.z || 0,\n      },\n      rotation: {\n        x: props.rotation?.x || 0,\n        y: props.rotation?.y || 0,\n        z: props.rotation?.z || 0,\n      },\n      scale: {\n        x: props.scale?.x || 0,\n        y: props.scale?.y || 0,\n        z: props.scale?.z || 0,\n      },\n    }\n    const out = (type: string, attr: string, v: any) => {\n      data[type][attr] = +v\n      ctx.emit(\"onChange\", data)\n    }\n    return {\n      ExpandStatus,\n      show,\n      props,\n      out,\n    }\n  },\n})\n</script>\n<style lang=\"less\" scoped>\n@import \"./AttributeTransform.less\";\n</style>\n","<template>\n  <div class=\"attribute-transform\">\n    <Title\n      :label=\"label || 'TRANSFORM'\"\n      :ExpandStatus=\"ExpandStatus\"\n      @onClick=\"show\"\n    />\n    <div v-show=\"ExpandStatus\" class=\"\">\n      <div class=\"attribute\">\n        <div class=\"attribute-label\">Translation</div>\n        <div class=\"attribute-body\">\n          <div class=\"attribute-body-item\">\n            <span class=\"x\">X</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.location?.x\"\n              @onInput=\"\n                (v) => {\n                  out('location', 'x', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"y\">Y</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.location?.y\"\n              @onInput=\"\n                (v) => {\n                  out('location', 'y', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"z\">Z</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.location?.z\"\n              @onInput=\"\n                (v) => {\n                  out('location', 'z', v)\n                }\n              \"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"attribute\">\n        <div class=\"attribute-label\">Rotation</div>\n        <div class=\"attribute-body\">\n          <div class=\"attribute-body-item\">\n            <span class=\"x\">X</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.rotation?.x\"\n              @onInput=\"\n                (v) => {\n                  out('rotation', 'x', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"y\">Y</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.rotation?.y\"\n              @onInput=\"\n                (v) => {\n                  out('rotation', 'y', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"z\">Z</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.rotation?.z\"\n              @onInput=\"\n                (v) => {\n                  out('rotation', 'z', v)\n                }\n              \"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"attribute\">\n        <div class=\"attribute-label\">Scale</div>\n        <div class=\"attribute-body\">\n          <div class=\"attribute-body-item\">\n            <span class=\"x\">X</span\n            ><MInput width=\"60px\" :value=\"props.scale?.x\" />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"y\">Y</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.scale?.y\"\n              @onInput=\"\n                (v) => {\n                  out('scale', 'y', v)\n                }\n              \"\n            />\n          </div>\n          <div class=\"attribute-body-item\">\n            <span class=\"z\">Z</span\n            ><MInput\n              width=\"60px\"\n              :value=\"props.scale?.z\"\n              @onInput=\"\n                (v) => {\n                  out('scale', 'z', v)\n                }\n              \"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\"\nimport MInput from \"../MInput/MInput.vue\"\nimport Title from \"../AttributeTitle/AttributeTitle.vue\"\nexport default defineComponent({\n  props: {\n    location: {\n      type: Object,\n    },\n    rotation: {\n      type: Object,\n    },\n    scale: {\n      type: Object,\n    },\n    label: String,\n  },\n  components: {\n    MInput,\n    Title,\n  },\n  setup(props, ctx) {\n    const ExpandStatus = ref(true)\n    const show = () => {\n      ExpandStatus.value = !ExpandStatus.value\n    }\n    const data: any = {\n      location: {\n        x: props.location?.x || 0,\n        y: props.location?.y || 0,\n        z: props.location?.z || 0,\n      },\n      rotation: {\n        x: props.rotation?.x || 0,\n        y: props.rotation?.y || 0,\n        z: props.rotation?.z || 0,\n      },\n      scale: {\n        x: props.scale?.x || 0,\n        y: props.scale?.y || 0,\n        z: props.scale?.z || 0,\n      },\n    }\n    const out = (type: string, attr: string, v: any) => {\n      data[type][attr] = +v\n      ctx.emit(\"onChange\", data)\n    }\n    return {\n      ExpandStatus,\n      show,\n      props,\n      out,\n    }\n  },\n})\n</script>\n<style lang=\"less\" scoped>\n@import \"./AttributeTransform.less\";\n</style>\n"],"names":["_sfc_main","defineComponent","MInput","Title","props","ctx","ExpandStatus","ref","show","__name","data","_a","_b","_c","_d","_e","_f","_g","_h","_i","type","attr","v","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","_createElementVNode","_hoisted_6","_hoisted_7","_hoisted_10","_hoisted_11","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_component_MInput","_resolveComponent","_openBlock","_createElementBlock","_createVNode","_component_Title","_ctx","_withDirectives","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_cache","_hoisted_8","_hoisted_9","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_28","_hoisted_29"],"mappings":"oXAkIA,MAAAA,EAAeC,EAAgB,CAC7B,MAAO,CACL,SAAU,CACR,KAAM,MACR,EACA,SAAU,CACR,KAAM,MACR,EACA,MAAO,CACL,KAAM,MACR,EACA,MAAO,MACT,EACA,WAAY,CACV,OAAAC,EACA,MAAAC,CACF,EACA,MAAMC,EAAOC,EAAK,uBACV,MAAAC,EAAeC,EAAI,EAAI,EACvBC,EAAOC,EAAA,IAAM,CACJH,EAAA,MAAQ,CAACA,EAAa,KAAA,EADxB,QAGPI,EAAY,CAChB,SAAU,CACR,IAAGC,EAAAP,EAAM,WAAN,YAAAO,EAAgB,IAAK,EACxB,IAAGC,EAAAR,EAAM,WAAN,YAAAQ,EAAgB,IAAK,EACxB,IAAGC,EAAAT,EAAM,WAAN,YAAAS,EAAgB,IAAK,CAC1B,EACA,SAAU,CACR,IAAGC,EAAAV,EAAM,WAAN,YAAAU,EAAgB,IAAK,EACxB,IAAGC,EAAAX,EAAM,WAAN,YAAAW,EAAgB,IAAK,EACxB,IAAGC,EAAAZ,EAAM,WAAN,YAAAY,EAAgB,IAAK,CAC1B,EACA,MAAO,CACL,IAAGC,EAAAb,EAAM,QAAN,YAAAa,EAAa,IAAK,EACrB,IAAGC,EAAAd,EAAM,QAAN,YAAAc,EAAa,IAAK,EACrB,IAAGC,EAAAf,EAAM,QAAN,YAAAe,EAAa,IAAK,CACvB,CAAA,EAMK,MAAA,CACL,aAAAb,EACA,KAAAE,EACA,MAAAJ,EACA,IARUK,EAAA,CAACW,EAAcC,EAAcC,IAAW,CAC7CZ,EAAAU,GAAMC,GAAQ,CAACC,EAChBjB,EAAA,KAAK,WAAYK,CAAI,CAAA,EAFf,MAQV,CAEJ,CACF,CAAC,EC7K8B,MAAAa,EAAAd,EAAAe,IAAKC,EAAG,iBAAA,EAAAD,EAAAA,IAAAE,IAAAF,GAAR,gBACpBG,EAAA,CAAA,MAAM,uCAEJ,MAAM,eACuBJ,EAAA,IAAAK,EAAA,MAAA,CAAA,MAAA,mBAAA,cAAA,EAAA,CAAA,6BAY3BC,EAAA,CAAA,MAAM,uBACTC,EAAAP,EAAA,IAAAK,EACC,OADK,CAAA,MAAM,KAAI,IAAC,EAAA,CAAA,WAWT,iCACR,OACC,CAAA,MADU,KAAM,IAAA,EAAA,CAAA,EAalBG,EAAA,CAAA,MAAM,uBACTC,EAAAT,EAAA,IAAAK,EAA2C,QAAtC,MAAM,KAAA,IAAA,EAAA,CAAA,KACN,MAAM,eACuBL,EAAA,IAAAK,EAAA,MAAA,CAAA,MAAA,mBAAA,WAAA,EAAA,CAAA,6BAY3BK,EAAA,CAAA,MAAM,uBACTC,EAAAX,EAAA,IAAAK,EACC,OADK,CAAA,MAAM,KAAI,IAAC,EAAA,CAAA,EAWdO,EAAA,CAAA,MAAM,uBACTC,GAAAb,EAAA,IAAAK,EACC,OADK,CAAA,MAAM,KAAI,IAAC,EAAA,CAAA,EAalBS,GAAA,CAAA,MAAM,uBACTC,GAAAf,EAAA,IAAAK,EAAwC,QAAnC,MAAM,KAAA,IAAA,EAAA,CAAA,MACN,MAAM,gBACuBL,EAAA,IAAAK,EAAA,MAAA,CAAA,MAAA,mBAAA,QAAA,EAAA,CAAA,8BAI3BW,GAAA,CAAA,MAAM,uBACTC,GAAAjB,EAAA,IAAAK,EACC,OADK,CAAA,MAAM,KAAI,IAAC,EAAA,CAAA,EAWda,GAAA,CAAA,MAAM,uBACTC,GAAAnB,EAAA,IAAAK,EACC,OADK,CAAA,MAAM,KAAI,IAAC,EAAA,CAAA,4IA7G3Be,EAAAC,EA2HM,QA3HN,EAEK,OAAAC,EAAY,EAAAC,EAAA,MAAAnB,EAAA,CAAAoB,EACZC,EAAc,CACd,QAAS,OAAI,YAAA,aAAAC,EAAA,aAEhB,UAAAA,EAAA,IAAA,EACE,KAAA,EAAA,CAAA,QAwCM,eAxCN,WAwCM,CAAA,EAvC0CC,EAAAtB,EAAA,MAAAuB,EAAA,CAAAvB,EAC9C,MAqCMwB,EAAA,CAAAC,EAlCDzB,EAAA,MAAA0B,EAAA,CAQC1B,EAAA,MAAAC,EAAA,CAAAC,IANQa,EAAiB,CACxB,MAAA,OAA4B,OAAAhC,EAAAsC,EAAA,MAAA,WAAA,YAAAtC,EAAA,EAAA,UAAyB4C,EAAG,KAAmBA,EAAA,GAAAjC,GAAA,0BAkB1E,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EADFM,EAAA,MAAA4B,EAAA,CAAAC,IANQd,EAAiB,CACxB,MAAA,OAA4B,OAAA/B,EAAAqC,EAAA,MAAA,WAAA,YAAArC,EAAA,EAAA,UAAyB2C,EAAG,KAAmBA,EAAA,GAAAjC,GAAA,0BAkB1E,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EADFM,EAAA,MAAAG,EAAA,CAAAC,IANQW,EAAiB,CACxB,MAAA,OAA4B,OAAA9B,EAAAoC,EAAA,MAAA,WAAA,YAAApC,EAAA,EAAA,UAAyB0C,EAAG,KAAmBA,EAAA,GAAAjC,GAAA,+CASpF,CAAA,CAAA,CAAA,IAEE,MAqCMoC,EAAA,CAAAC,EAlCD/B,EAAA,MAAAgC,EAAA,CAQChC,EAAA,MAAAK,EAAA,CAAAC,IANQS,EAAiB,CACxB,MAAA,OAA4B,OAAA7B,EAAAmC,EAAA,MAAA,WAAA,YAAAnC,EAAA,EAAA,UAAyByC,EAAG,KAAmBA,EAAA,GAAAjC,GAAA,0BAkB1E,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EADFM,EAAA,MAAAO,EAAA,CAAAC,KANQO,EAAiB,CACxB,MAAA,OAA4B,OAAA5B,EAAAkC,EAAA,MAAA,WAAA,YAAAlC,EAAA,EAAA,UAAyBwC,EAAG,KAAmBA,EAAA,GAAAjC,GAAA,0BAkB1E,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EADFM,EAAA,MAAAS,GAAA,CAAAC,KANQK,EAAiB,CACxB,MAAA,OAA4B,OAAA3B,EAAAiC,EAAA,MAAA,WAAA,YAAAjC,EAAA,EAAA,UAAyBuC,EAAG,KAAmBA,EAAA,GAAAjC,GAAA,+CASpF,CAAA,CAAA,CAAA,IAEE,MA6BMuC,GAAA,CAAAC,GA1BDlC,EAAA,MAAAmC,GAAA,CAA+CnC,EAAA,MAAAW,GAAA,CAAAC,KAAlBG,EAAc,CAAA,MAAA,+CAaxC,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EADFf,EAAA,MAAAa,GAAA,CAAAC,KANQC,EAAc,CACrB,MAAA,OAA4B,OAAAzB,EAAA+B,EAAA,MAAA,QAAA,YAAA/B,EAAA,EAAA,UAAyBqC,EAAG,KAAgBA,EAAA,GAAAjC,GAAA,uBAkBvE,EAAA,KAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EADFM,EAAA,MAAAoC,GAAA,CAAAC,KANQtB,EAAc,CACrB,MAAA,OAA4B,OAAAxB,EAAA8B,EAAA,MAAA,QAAA,YAAA9B,EAAA,EAAA,UAAyBoC,EAAG,KAAgBA,EAAA,GAAAjC,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;"}